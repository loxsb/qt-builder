name: build_qt6.5_windows

on: workflow_dispatch
#on: [push, pull_request]

env:
  QT_VERSION: 6.5.6
  QT_VERSION2: 6.5
  ARCH: msvc2022-amd64
  ROOT_DIR: D:\a\qt-builder\qt-builder\

jobs:
  windows_release:
    runs-on: windows-latest

    steps:
    # 检出本仓库
    - name: Checkout repository
      uses: actions/checkout@v4

    # 安装python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        architecture: 'x64'

    # 安装msvc
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    # 安装vsdevenv
    - name: Setup vsdevenv
      uses: seanmiddleditch/gha-setup-vsdevenv@master

    # 构建Qt
    - name: Download source
      run: |
        cd ${{env.ROOT_DIR}}
        mkdir -p qt-everywhere-src

        curl -L -o qt-everywhere-src.zip https://download.qt.io/official_releases/qt/${{env.QT_VERSION2}}/${{env.QT_VERSION}}/src/single/qt-everywhere-opensource-src-${{env.QT_VERSION}}.zip
        unzip -q qt-everywhere-src.zip -d ./qt-everywhere-src

      # 构建Qt
    - name: Build Qt
      run: |
        ls -al .
        ls -al ./qt-everywhere-src
        mkdir -p build
        mkdir -p ${{env.QT_VERSION}}\${{env.ARCH}}
        cd build
        "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        ../qt-everywhere-src/configure.bat -release -shared -force-debug-info -separate-debug-info -prefix ${{env.ROOT_DIR}}\${{env.QT_VERSION}}\${{env.ARCH}} -nomake examples -nomake tests -skip qtwebengine -opensource -confirm-license -qt-libpng -qt-libjpeg -qt-zlib -qt-pcre -qt-freetype -schannel -platform win32-msvc
        cmake --build . --parallel
        cmake --install .
        ls -al .
        copy .\qt.conf ${{env.ROOT_DIR}}\${{env.QT_VERSION}}\${{env.ARCH}}\bin

    # 上传
    - uses: actions/upload-artifact@v4
      with:
        name: Qt-${{env.QT_VERSION}}-windows-msvc2022-x64
        path: ${{env.ROOT_DIR}}\${{env.QT_VERSION}}
