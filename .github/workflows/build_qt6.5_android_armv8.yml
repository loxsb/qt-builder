name: build_qt6.5_android_ndk27_armv8

on: workflow_dispatch

env:
  QT_VERSION: 6.5.6
  QT_VERSION2: 6.5
  ANDROID_NDK_VERSION: 27.2.12479018
  ANDROID_JDK_VERSION: 17
  ANDROID_API: 35
  ANDROID_BUILD_TOOLS_VERSION: 35.0.0
  ARCH: arm64-v8a
  FILE_NAME: release_android_ndk27_armv8

jobs:
  android_armv8_release:
    runs-on: ubuntu-latest

    steps:
    # 检出本仓库
    - name: Checkout repository
      uses: actions/checkout@v4

    # 安装更新
    - name: Install updates
      run: |
        export DEBIAN_FRONTEND=noninteractive
        dpkg --add-architecture arm64
        apt-get -y update
        apt-get -y upgrade

    # 安装依赖
    - name: Install dependencies
      run: |
        apt-get -y install build-essential
        apt-get -y install gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu pip freeglut3-dev:arm64 gdb git iputils-ping \
        libgl1-mesa-dev:arm64 libglu1-mesa-dev:arm64 libjpeg-dev:arm64 libmysqlclient-dev:arm64 \
        libnss3-dev:arm64 libopus-dev:arm64 libpng-dev:arm64 libsqlite3-dev:arm64 libssl-dev:arm64 \
        libx11-xcb-dev:arm64 libxcb-xinerama0-dev:arm64 libxcb-xkb-dev:arm64 libxcb1-dev:arm64 \
        libxcursor-dev:arm64 libxi-dev:arm64 libxml2-dev:arm64 libxrender-dev:arm64 libxslt-dev:arm64 \
        lzip mesa-common-dev:arm64 nano perl python3 valgrind wget zlib1g-dev:arm64 '^libxcb.*-dev:arm64' \
        libxkbcommon-dev:arm64 libxkbcommon-x11-dev:arm64 wget libwayland-dev:arm64 flex bison gperf \
        libicu-dev:arm64 libxslt-dev:arm64 ruby libxcursor-dev:arm64 libxcomposite-dev:arm64 \
        libxdamage-dev:arm64 libxrandr-dev:arm64 libxtst-dev:arm64 libxss-dev:arm64 libdbus-1-dev:arm64 \
        libevent-dev:arm64 libfontconfig1-dev:arm64 libcap-dev:arm64 libpulse-dev:arm64 libudev-dev:arm64 \
        libpci-dev:arm64 libnss3-dev:arm64 libasound2-dev:arm64 libegl1-mesa-dev:arm64 gperf bison nodejs \
        libasound2-dev:arm64 libgstreamer1.0-dev:arm64 libgstreamer-plugins-base1.0-dev:arm64 \
        libgstreamer-plugins-good1.0-dev:arm64 libnspr4-dev:arm64 libcups2-dev:arm64 \
        libmng-dev:arm64 libwebp-dev:arm64 libxcb-xinput-dev:arm64 libwebpmux3:arm64 libvpx-dev:arm64 \
        libavformat-dev:arm64 libavcodec-dev:arm64 libavutil-dev:arm64 libswresample-dev:arm64 libswscale-dev:arm64 libavdevice-dev:arm64 libzstd-dev:arm64 \
        libpcre2-dev:arm64 libclang-dev:arm64 libllvm14:arm64 libxshmfence-dev:arm64 libxkbfile-dev:arm64 libbluetooth-dev:arm64 \
        libsctp-dev:arm64 libsnappy-dev:arm64 libmd4c-dev:arm64 libmd4c-html0-dev:arm64 libharfbuzz-dev:arm64 libminizip-dev:arm64 \
        libb2-dev:arm64 libva-dev:arm64 \
        g++-aarch64-linux-gnu gcc-aarch64-linux-gnu ninja-build cmake
    
        apt-get -y install freeglut3-dev libgl1-mesa-dev libglu1-mesa-dev libjpeg-dev libmysqlclient-dev \
        libnss3-dev libopus-dev libpng-dev libsqlite3-dev libssl-dev \
        libx11-xcb-dev libxcb-xinerama0-dev libxcb-xkb-dev libxcb1-dev \
        libxcursor-dev libxi-dev libxml2-dev libxrender-dev libxslt-dev mesa-common-dev \
        zlib1g-dev '^libxcb.*-dev' libxkbcommon-dev libxkbcommon-x11-dev libwayland-dev \
        libicu-dev libxslt-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libxtst-dev \
        libxss-dev libdbus-1-dev libevent-dev libfontconfig1-dev libcap-dev libpulse-dev libudev-dev \
        libpci-dev libnss3-dev libasound2-dev libegl1-mesa-dev libasound2-dev libgstreamer1.0-dev \
        libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev libnspr4-dev libcups2-dev \
        libavformat-dev libavcodec-dev libavutil-dev libswresample-dev libswscale-dev libavdevice-dev \
        libmng-dev libwebp-dev libxcb-xinput-dev libwebpmux3 libvpx-dev zstd libzstd-dev \
        libpcre2-dev libclang-dev libllvm14 python3 python3-html5lib libxshmfence-dev libxkbfile-dev libbluetooth-dev \
        libsctp-dev libsnappy-dev libmd4c-dev libmd4c-html0-dev libharfbuzz-dev libminizip-dev libb2-dev libva-dev

    # 安装android依赖
    - name: Install android dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        export JAVA_HOME=/usr/lib/jvm/java-${{env.ANDROID_JDK_VERSION}}-openjdk-amd64
        apt-get install -y openjdk-${{env.ANDROID_JDK_VERSION}}-jdk sdkmanager
        sdkmanager "platforms;android-${{env.ANDROID_API}}" "platform-tools" "build-tools;${{env.ANDROID_BUILD_TOOLS_VERSION}}"
        export ANDROID_SDK_ROOT=/opt/android-sdk
        sdkmanager "ndk;${{env.ANDROID_NDK_VERSION}}"
        export ANDROID_NDK_ROOT=/opt/android-sdk/ndk/${{env.ANDROID_NDK_VERSION}}

    # 下载Qt源代码
    - name: Download Qt source
      run: |
        curl -L -o qt-everywhere-src.zip https://download.qt.io/official_releases/qt/${{env.QT_VERSION2}}/${{env.QT_VERSION}}/src/single/qt-everywhere-opensource-src-${{env.QT_VERSION}}.tar.xz
        tar xvfp qt-everywhere-src.tar.xz

    # 编译Qt host tools
    - name: Build Qt host tools
      run: |
        pwd
        mkdir build-host
        cd build-host
        ../qt-everywhere-src/configure -developer-build -nomake tests -nomake examples
        cmake --build . --target host_tools
